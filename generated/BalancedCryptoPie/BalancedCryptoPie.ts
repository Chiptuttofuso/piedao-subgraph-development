// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get _src(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _dst(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CapChanged extends ethereum.Event {
  get params(): CapChanged__Params {
    return new CapChanged__Params(this);
  }
}

export class CapChanged__Params {
  _event: CapChanged;

  constructor(event: CapChanged) {
    this._event = event;
  }

  get setter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldCap(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newCap(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CircuitBreakerChanged extends ethereum.Event {
  get params(): CircuitBreakerChanged__Params {
    return new CircuitBreakerChanged__Params(this);
  }
}

export class CircuitBreakerChanged__Params {
  _event: CircuitBreakerChanged;

  constructor(event: CircuitBreakerChanged) {
    this._event = event;
  }

  get _oldCircuitBreaker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _newCircuitBreaker(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class CircuitBreakerTripped extends ethereum.Event {
  get params(): CircuitBreakerTripped__Params {
    return new CircuitBreakerTripped__Params(this);
  }
}

export class CircuitBreakerTripped__Params {
  _event: CircuitBreakerTripped;

  constructor(event: CircuitBreakerTripped) {
    this._event = event;
  }
}

export class ControllerChanged extends ethereum.Event {
  get params(): ControllerChanged__Params {
    return new ControllerChanged__Params(this);
  }
}

export class ControllerChanged__Params {
  _event: ControllerChanged;

  constructor(event: ControllerChanged) {
    this._event = event;
  }

  get previousController(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newController(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class JoinExitEnabledChanged extends ethereum.Event {
  get params(): JoinExitEnabledChanged__Params {
    return new JoinExitEnabledChanged__Params(this);
  }
}

export class JoinExitEnabledChanged__Params {
  _event: JoinExitEnabledChanged;

  constructor(event: JoinExitEnabledChanged) {
    this._event = event;
  }

  get setter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldValue(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get newValue(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class PublicSwapSet extends ethereum.Event {
  get params(): PublicSwapSet__Params {
    return new PublicSwapSet__Params(this);
  }
}

export class PublicSwapSet__Params {
  _event: PublicSwapSet;

  constructor(event: PublicSwapSet) {
    this._event = event;
  }

  get setter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class PublicSwapSetterChanged extends ethereum.Event {
  get params(): PublicSwapSetterChanged__Params {
    return new PublicSwapSetterChanged__Params(this);
  }
}

export class PublicSwapSetterChanged__Params {
  _event: PublicSwapSetterChanged;

  constructor(event: PublicSwapSetterChanged) {
    this._event = event;
  }

  get previousSetter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newSetter(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SwapFeeSet extends ethereum.Event {
  get params(): SwapFeeSet__Params {
    return new SwapFeeSet__Params(this);
  }
}

export class SwapFeeSet__Params {
  _event: SwapFeeSet;

  constructor(event: SwapFeeSet) {
    this._event = event;
  }

  get setter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TokenBinderChanged extends ethereum.Event {
  get params(): TokenBinderChanged__Params {
    return new TokenBinderChanged__Params(this);
  }
}

export class TokenBinderChanged__Params {
  _event: TokenBinderChanged;

  constructor(event: TokenBinderChanged) {
    this._event = event;
  }

  get previousTokenBinder(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newTokenBinder(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TokensApproved extends ethereum.Event {
  get params(): TokensApproved__Params {
    return new TokensApproved__Params(this);
  }
}

export class TokensApproved__Params {
  _event: TokensApproved;

  constructor(event: TokensApproved) {
    this._event = event;
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get _src(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _dst(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BalancedCryptoPie__calcTokensForAmountResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }
}

export class BalancedCryptoPie__getNewTokenResultValue0Struct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get isCommitted(): boolean {
    return this[1].toBoolean();
  }

  get balance(): BigInt {
    return this[2].toBigInt();
  }

  get denorm(): BigInt {
    return this[3].toBigInt();
  }

  get commitBlock(): BigInt {
    return this[4].toBigInt();
  }
}

export class BalancedCryptoPie extends ethereum.SmartContract {
  static bind(address: Address): BalancedCryptoPie {
    return new BalancedCryptoPie("BalancedCryptoPie", address);
  }

  allowance(_src: Address, _dst: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(_src), ethereum.Value.fromAddress(_dst)]
    );

    return result[0].toBigInt();
  }

  try_allowance(_src: Address, _dst: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(_src), ethereum.Value.fromAddress(_dst)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  approve(_dst: Address, _amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(_dst),
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBoolean();
  }

  try_approve(_dst: Address, _amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(_dst),
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(_whom: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_whom)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_whom: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_whom)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calcPoolInGivenSingleOut(_token: Address, _amount: BigInt): BigInt {
    let result = super.call(
      "calcPoolInGivenSingleOut",
      "calcPoolInGivenSingleOut(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_calcPoolInGivenSingleOut(
    _token: Address,
    _amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calcPoolInGivenSingleOut",
      "calcPoolInGivenSingleOut(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calcPoolOutGivenSingleIn(_token: Address, _amount: BigInt): BigInt {
    let result = super.call(
      "calcPoolOutGivenSingleIn",
      "calcPoolOutGivenSingleIn(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_calcPoolOutGivenSingleIn(
    _token: Address,
    _amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calcPoolOutGivenSingleIn",
      "calcPoolOutGivenSingleIn(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calcSingleInGivenPoolOut(_token: Address, _amount: BigInt): BigInt {
    let result = super.call(
      "calcSingleInGivenPoolOut",
      "calcSingleInGivenPoolOut(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_calcSingleInGivenPoolOut(
    _token: Address,
    _amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calcSingleInGivenPoolOut",
      "calcSingleInGivenPoolOut(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calcSingleOutGivenPoolIn(_token: Address, _amount: BigInt): BigInt {
    let result = super.call(
      "calcSingleOutGivenPoolIn",
      "calcSingleOutGivenPoolIn(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_calcSingleOutGivenPoolIn(
    _token: Address,
    _amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calcSingleOutGivenPoolIn",
      "calcSingleOutGivenPoolIn(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calcTokensForAmount(
    _amount: BigInt
  ): BalancedCryptoPie__calcTokensForAmountResult {
    let result = super.call(
      "calcTokensForAmount",
      "calcTokensForAmount(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_amount)]
    );

    return new BalancedCryptoPie__calcTokensForAmountResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray()
    );
  }

  try_calcTokensForAmount(
    _amount: BigInt
  ): ethereum.CallResult<BalancedCryptoPie__calcTokensForAmountResult> {
    let result = super.tryCall(
      "calcTokensForAmount",
      "calcTokensForAmount(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_amount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BalancedCryptoPie__calcTokensForAmountResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray()
      )
    );
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseApproval(_dst: Address, _amount: BigInt): boolean {
    let result = super.call(
      "decreaseApproval",
      "decreaseApproval(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_dst),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_decreaseApproval(
    _dst: Address,
    _amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseApproval",
      "decreaseApproval(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_dst),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  exitswapExternAmountOut(
    _token: Address,
    _tokenAmountOut: BigInt,
    _maxPoolAmountIn: BigInt
  ): BigInt {
    let result = super.call(
      "exitswapExternAmountOut",
      "exitswapExternAmountOut(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_tokenAmountOut),
        ethereum.Value.fromUnsignedBigInt(_maxPoolAmountIn)
      ]
    );

    return result[0].toBigInt();
  }

  try_exitswapExternAmountOut(
    _token: Address,
    _tokenAmountOut: BigInt,
    _maxPoolAmountIn: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "exitswapExternAmountOut",
      "exitswapExternAmountOut(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_tokenAmountOut),
        ethereum.Value.fromUnsignedBigInt(_maxPoolAmountIn)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  exitswapPoolAmountIn(
    _token: Address,
    _poolAmountIn: BigInt,
    _minAmountOut: BigInt
  ): BigInt {
    let result = super.call(
      "exitswapPoolAmountIn",
      "exitswapPoolAmountIn(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_poolAmountIn),
        ethereum.Value.fromUnsignedBigInt(_minAmountOut)
      ]
    );

    return result[0].toBigInt();
  }

  try_exitswapPoolAmountIn(
    _token: Address,
    _poolAmountIn: BigInt,
    _minAmountOut: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "exitswapPoolAmountIn",
      "exitswapPoolAmountIn(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_poolAmountIn),
        ethereum.Value.fromUnsignedBigInt(_minAmountOut)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAnnualFee(): BigInt {
    let result = super.call("getAnnualFee", "getAnnualFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getAnnualFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getAnnualFee", "getAnnualFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBPool(): Address {
    let result = super.call("getBPool", "getBPool():(address)", []);

    return result[0].toAddress();
  }

  try_getBPool(): ethereum.CallResult<Address> {
    let result = super.tryCall("getBPool", "getBPool():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCap(): BigInt {
    let result = super.call("getCap", "getCap():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getCap(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getCap", "getCap():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCircuitBreaker(): Address {
    let result = super.call(
      "getCircuitBreaker",
      "getCircuitBreaker():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getCircuitBreaker(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getCircuitBreaker",
      "getCircuitBreaker():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getController(): Address {
    let result = super.call("getController", "getController():(address)", []);

    return result[0].toAddress();
  }

  try_getController(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getController",
      "getController():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDenormalizedWeight(_token: Address): BigInt {
    let result = super.call(
      "getDenormalizedWeight",
      "getDenormalizedWeight(address):(uint256)",
      [ethereum.Value.fromAddress(_token)]
    );

    return result[0].toBigInt();
  }

  try_getDenormalizedWeight(_token: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDenormalizedWeight",
      "getDenormalizedWeight(address):(uint256)",
      [ethereum.Value.fromAddress(_token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDenormalizedWeights(): Array<BigInt> {
    let result = super.call(
      "getDenormalizedWeights",
      "getDenormalizedWeights():(uint256[])",
      []
    );

    return result[0].toBigIntArray();
  }

  try_getDenormalizedWeights(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getDenormalizedWeights",
      "getDenormalizedWeights():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getEndBlock(): BigInt {
    let result = super.call("getEndBlock", "getEndBlock():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getEndBlock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getEndBlock", "getEndBlock():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFeeRecipient(): Address {
    let result = super.call(
      "getFeeRecipient",
      "getFeeRecipient():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getFeeRecipient(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFeeRecipient",
      "getFeeRecipient():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getJoinExitEnabled(): boolean {
    let result = super.call(
      "getJoinExitEnabled",
      "getJoinExitEnabled():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_getJoinExitEnabled(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getJoinExitEnabled",
      "getJoinExitEnabled():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getNewToken(): BalancedCryptoPie__getNewTokenResultValue0Struct {
    let result = super.call(
      "getNewToken",
      "getNewToken():((address,bool,uint256,uint256,uint256))",
      []
    );

    return result[0].toTuple() as BalancedCryptoPie__getNewTokenResultValue0Struct;
  }

  try_getNewToken(): ethereum.CallResult<
    BalancedCryptoPie__getNewTokenResultValue0Struct
  > {
    let result = super.tryCall(
      "getNewToken",
      "getNewToken():((address,bool,uint256,uint256,uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as BalancedCryptoPie__getNewTokenResultValue0Struct
    );
  }

  getNewWeights(): Array<BigInt> {
    let result = super.call("getNewWeights", "getNewWeights():(uint256[])", []);

    return result[0].toBigIntArray();
  }

  try_getNewWeights(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getNewWeights",
      "getNewWeights():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getPublicSwapSetter(): Address {
    let result = super.call(
      "getPublicSwapSetter",
      "getPublicSwapSetter():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getPublicSwapSetter(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPublicSwapSetter",
      "getPublicSwapSetter():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getStartBlock(): BigInt {
    let result = super.call("getStartBlock", "getStartBlock():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getStartBlock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getStartBlock",
      "getStartBlock():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getStartWeights(): Array<BigInt> {
    let result = super.call(
      "getStartWeights",
      "getStartWeights():(uint256[])",
      []
    );

    return result[0].toBigIntArray();
  }

  try_getStartWeights(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getStartWeights",
      "getStartWeights():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getSwapFee(): BigInt {
    let result = super.call("getSwapFee", "getSwapFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getSwapFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getSwapFee", "getSwapFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTokenBinder(): Address {
    let result = super.call("getTokenBinder", "getTokenBinder():(address)", []);

    return result[0].toAddress();
  }

  try_getTokenBinder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getTokenBinder",
      "getTokenBinder():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTokens(): Array<Address> {
    let result = super.call("getTokens", "getTokens():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getTokens(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getTokens", "getTokens():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  increaseApproval(_dst: Address, _amount: BigInt): boolean {
    let result = super.call(
      "increaseApproval",
      "increaseApproval(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_dst),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_increaseApproval(
    _dst: Address,
    _amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseApproval",
      "increaseApproval(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_dst),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPublicSwap(): boolean {
    let result = super.call("isPublicSwap", "isPublicSwap():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPublicSwap(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPublicSwap", "isPublicSwap():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  joinswapExternAmountIn(
    _token: Address,
    _amountIn: BigInt,
    _minPoolAmountOut: BigInt
  ): BigInt {
    let result = super.call(
      "joinswapExternAmountIn",
      "joinswapExternAmountIn(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amountIn),
        ethereum.Value.fromUnsignedBigInt(_minPoolAmountOut)
      ]
    );

    return result[0].toBigInt();
  }

  try_joinswapExternAmountIn(
    _token: Address,
    _amountIn: BigInt,
    _minPoolAmountOut: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "joinswapExternAmountIn",
      "joinswapExternAmountIn(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amountIn),
        ethereum.Value.fromUnsignedBigInt(_minPoolAmountOut)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  joinswapPoolAmountOut(
    _token: Address,
    _amountOut: BigInt,
    _maxAmountIn: BigInt
  ): BigInt {
    let result = super.call(
      "joinswapPoolAmountOut",
      "joinswapPoolAmountOut(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amountOut),
        ethereum.Value.fromUnsignedBigInt(_maxAmountIn)
      ]
    );

    return result[0].toBigInt();
  }

  try_joinswapPoolAmountOut(
    _token: Address,
    _amountOut: BigInt,
    _maxAmountIn: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "joinswapPoolAmountOut",
      "joinswapPoolAmountOut(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amountOut),
        ethereum.Value.fromUnsignedBigInt(_maxAmountIn)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(_dst: Address, _amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(_dst),
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(_dst: Address, _amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(_dst),
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(_src: Address, _dst: Address, _amount: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_src),
        ethereum.Value.fromAddress(_dst),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    _src: Address,
    _dst: Address,
    _amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_src),
        ethereum.Value.fromAddress(_dst),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ApplyAddTokenCall extends ethereum.Call {
  get inputs(): ApplyAddTokenCall__Inputs {
    return new ApplyAddTokenCall__Inputs(this);
  }

  get outputs(): ApplyAddTokenCall__Outputs {
    return new ApplyAddTokenCall__Outputs(this);
  }
}

export class ApplyAddTokenCall__Inputs {
  _call: ApplyAddTokenCall;

  constructor(call: ApplyAddTokenCall) {
    this._call = call;
  }
}

export class ApplyAddTokenCall__Outputs {
  _call: ApplyAddTokenCall;

  constructor(call: ApplyAddTokenCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _dst(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ApproveTokensCall extends ethereum.Call {
  get inputs(): ApproveTokensCall__Inputs {
    return new ApproveTokensCall__Inputs(this);
  }

  get outputs(): ApproveTokensCall__Outputs {
    return new ApproveTokensCall__Outputs(this);
  }
}

export class ApproveTokensCall__Inputs {
  _call: ApproveTokensCall;

  constructor(call: ApproveTokensCall) {
    this._call = call;
  }
}

export class ApproveTokensCall__Outputs {
  _call: ApproveTokensCall;

  constructor(call: ApproveTokensCall) {
    this._call = call;
  }
}

export class BindCall extends ethereum.Call {
  get inputs(): BindCall__Inputs {
    return new BindCall__Inputs(this);
  }

  get outputs(): BindCall__Outputs {
    return new BindCall__Outputs(this);
  }
}

export class BindCall__Inputs {
  _call: BindCall;

  constructor(call: BindCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _balance(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _denorm(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BindCall__Outputs {
  _call: BindCall;

  constructor(call: BindCall) {
    this._call = call;
  }
}

export class ChargeOutstandingAnnualFeeCall extends ethereum.Call {
  get inputs(): ChargeOutstandingAnnualFeeCall__Inputs {
    return new ChargeOutstandingAnnualFeeCall__Inputs(this);
  }

  get outputs(): ChargeOutstandingAnnualFeeCall__Outputs {
    return new ChargeOutstandingAnnualFeeCall__Outputs(this);
  }
}

export class ChargeOutstandingAnnualFeeCall__Inputs {
  _call: ChargeOutstandingAnnualFeeCall;

  constructor(call: ChargeOutstandingAnnualFeeCall) {
    this._call = call;
  }
}

export class ChargeOutstandingAnnualFeeCall__Outputs {
  _call: ChargeOutstandingAnnualFeeCall;

  constructor(call: ChargeOutstandingAnnualFeeCall) {
    this._call = call;
  }
}

export class CommitAddTokenCall extends ethereum.Call {
  get inputs(): CommitAddTokenCall__Inputs {
    return new CommitAddTokenCall__Inputs(this);
  }

  get outputs(): CommitAddTokenCall__Outputs {
    return new CommitAddTokenCall__Outputs(this);
  }
}

export class CommitAddTokenCall__Inputs {
  _call: CommitAddTokenCall;

  constructor(call: CommitAddTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _balance(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _denormalizedWeight(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CommitAddTokenCall__Outputs {
  _call: CommitAddTokenCall;

  constructor(call: CommitAddTokenCall) {
    this._call = call;
  }
}

export class DecreaseApprovalCall extends ethereum.Call {
  get inputs(): DecreaseApprovalCall__Inputs {
    return new DecreaseApprovalCall__Inputs(this);
  }

  get outputs(): DecreaseApprovalCall__Outputs {
    return new DecreaseApprovalCall__Outputs(this);
  }
}

export class DecreaseApprovalCall__Inputs {
  _call: DecreaseApprovalCall;

  constructor(call: DecreaseApprovalCall) {
    this._call = call;
  }

  get _dst(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseApprovalCall__Outputs {
  _call: DecreaseApprovalCall;

  constructor(call: DecreaseApprovalCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ExitPoolCall extends ethereum.Call {
  get inputs(): ExitPoolCall__Inputs {
    return new ExitPoolCall__Inputs(this);
  }

  get outputs(): ExitPoolCall__Outputs {
    return new ExitPoolCall__Outputs(this);
  }
}

export class ExitPoolCall__Inputs {
  _call: ExitPoolCall;

  constructor(call: ExitPoolCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _minAmountsOut(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class ExitPoolCall__Outputs {
  _call: ExitPoolCall;

  constructor(call: ExitPoolCall) {
    this._call = call;
  }
}

export class ExitPool1Call extends ethereum.Call {
  get inputs(): ExitPool1Call__Inputs {
    return new ExitPool1Call__Inputs(this);
  }

  get outputs(): ExitPool1Call__Outputs {
    return new ExitPool1Call__Outputs(this);
  }
}

export class ExitPool1Call__Inputs {
  _call: ExitPool1Call;

  constructor(call: ExitPool1Call) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExitPool1Call__Outputs {
  _call: ExitPool1Call;

  constructor(call: ExitPool1Call) {
    this._call = call;
  }
}

export class ExitPoolTakinglossCall extends ethereum.Call {
  get inputs(): ExitPoolTakinglossCall__Inputs {
    return new ExitPoolTakinglossCall__Inputs(this);
  }

  get outputs(): ExitPoolTakinglossCall__Outputs {
    return new ExitPoolTakinglossCall__Outputs(this);
  }
}

export class ExitPoolTakinglossCall__Inputs {
  _call: ExitPoolTakinglossCall;

  constructor(call: ExitPoolTakinglossCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _lossTokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class ExitPoolTakinglossCall__Outputs {
  _call: ExitPoolTakinglossCall;

  constructor(call: ExitPoolTakinglossCall) {
    this._call = call;
  }
}

export class ExitswapExternAmountOutCall extends ethereum.Call {
  get inputs(): ExitswapExternAmountOutCall__Inputs {
    return new ExitswapExternAmountOutCall__Inputs(this);
  }

  get outputs(): ExitswapExternAmountOutCall__Outputs {
    return new ExitswapExternAmountOutCall__Outputs(this);
  }
}

export class ExitswapExternAmountOutCall__Inputs {
  _call: ExitswapExternAmountOutCall;

  constructor(call: ExitswapExternAmountOutCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenAmountOut(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _maxPoolAmountIn(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ExitswapExternAmountOutCall__Outputs {
  _call: ExitswapExternAmountOutCall;

  constructor(call: ExitswapExternAmountOutCall) {
    this._call = call;
  }

  get poolAmountIn(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ExitswapPoolAmountInCall extends ethereum.Call {
  get inputs(): ExitswapPoolAmountInCall__Inputs {
    return new ExitswapPoolAmountInCall__Inputs(this);
  }

  get outputs(): ExitswapPoolAmountInCall__Outputs {
    return new ExitswapPoolAmountInCall__Outputs(this);
  }
}

export class ExitswapPoolAmountInCall__Inputs {
  _call: ExitswapPoolAmountInCall;

  constructor(call: ExitswapPoolAmountInCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _poolAmountIn(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _minAmountOut(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ExitswapPoolAmountInCall__Outputs {
  _call: ExitswapPoolAmountInCall;

  constructor(call: ExitswapPoolAmountInCall) {
    this._call = call;
  }

  get tokenAmountOut(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class IncreaseApprovalCall extends ethereum.Call {
  get inputs(): IncreaseApprovalCall__Inputs {
    return new IncreaseApprovalCall__Inputs(this);
  }

  get outputs(): IncreaseApprovalCall__Outputs {
    return new IncreaseApprovalCall__Outputs(this);
  }
}

export class IncreaseApprovalCall__Inputs {
  _call: IncreaseApprovalCall;

  constructor(call: IncreaseApprovalCall) {
    this._call = call;
  }

  get _dst(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseApprovalCall__Outputs {
  _call: IncreaseApprovalCall;

  constructor(call: IncreaseApprovalCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitCall extends ethereum.Call {
  get inputs(): InitCall__Inputs {
    return new InitCall__Inputs(this);
  }

  get outputs(): InitCall__Outputs {
    return new InitCall__Outputs(this);
  }
}

export class InitCall__Inputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }

  get _bPool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _initialSupply(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class InitCall__Outputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class JoinPoolCall extends ethereum.Call {
  get inputs(): JoinPoolCall__Inputs {
    return new JoinPoolCall__Inputs(this);
  }

  get outputs(): JoinPoolCall__Outputs {
    return new JoinPoolCall__Outputs(this);
  }
}

export class JoinPoolCall__Inputs {
  _call: JoinPoolCall;

  constructor(call: JoinPoolCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class JoinPoolCall__Outputs {
  _call: JoinPoolCall;

  constructor(call: JoinPoolCall) {
    this._call = call;
  }
}

export class JoinPool1Call extends ethereum.Call {
  get inputs(): JoinPool1Call__Inputs {
    return new JoinPool1Call__Inputs(this);
  }

  get outputs(): JoinPool1Call__Outputs {
    return new JoinPool1Call__Outputs(this);
  }
}

export class JoinPool1Call__Inputs {
  _call: JoinPool1Call;

  constructor(call: JoinPool1Call) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxAmountsIn(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class JoinPool1Call__Outputs {
  _call: JoinPool1Call;

  constructor(call: JoinPool1Call) {
    this._call = call;
  }
}

export class JoinswapExternAmountInCall extends ethereum.Call {
  get inputs(): JoinswapExternAmountInCall__Inputs {
    return new JoinswapExternAmountInCall__Inputs(this);
  }

  get outputs(): JoinswapExternAmountInCall__Outputs {
    return new JoinswapExternAmountInCall__Outputs(this);
  }
}

export class JoinswapExternAmountInCall__Inputs {
  _call: JoinswapExternAmountInCall;

  constructor(call: JoinswapExternAmountInCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amountIn(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _minPoolAmountOut(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class JoinswapExternAmountInCall__Outputs {
  _call: JoinswapExternAmountInCall;

  constructor(call: JoinswapExternAmountInCall) {
    this._call = call;
  }

  get poolAmountOut(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class JoinswapPoolAmountOutCall extends ethereum.Call {
  get inputs(): JoinswapPoolAmountOutCall__Inputs {
    return new JoinswapPoolAmountOutCall__Inputs(this);
  }

  get outputs(): JoinswapPoolAmountOutCall__Outputs {
    return new JoinswapPoolAmountOutCall__Outputs(this);
  }
}

export class JoinswapPoolAmountOutCall__Inputs {
  _call: JoinswapPoolAmountOutCall;

  constructor(call: JoinswapPoolAmountOutCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amountOut(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _maxAmountIn(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class JoinswapPoolAmountOutCall__Outputs {
  _call: JoinswapPoolAmountOutCall;

  constructor(call: JoinswapPoolAmountOutCall) {
    this._call = call;
  }

  get tokenAmountIn(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PokeWeightsCall extends ethereum.Call {
  get inputs(): PokeWeightsCall__Inputs {
    return new PokeWeightsCall__Inputs(this);
  }

  get outputs(): PokeWeightsCall__Outputs {
    return new PokeWeightsCall__Outputs(this);
  }
}

export class PokeWeightsCall__Inputs {
  _call: PokeWeightsCall;

  constructor(call: PokeWeightsCall) {
    this._call = call;
  }
}

export class PokeWeightsCall__Outputs {
  _call: PokeWeightsCall;

  constructor(call: PokeWeightsCall) {
    this._call = call;
  }
}

export class RebindCall extends ethereum.Call {
  get inputs(): RebindCall__Inputs {
    return new RebindCall__Inputs(this);
  }

  get outputs(): RebindCall__Outputs {
    return new RebindCall__Outputs(this);
  }
}

export class RebindCall__Inputs {
  _call: RebindCall;

  constructor(call: RebindCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _balance(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _denorm(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RebindCall__Outputs {
  _call: RebindCall;

  constructor(call: RebindCall) {
    this._call = call;
  }
}

export class RemoveTokenCall extends ethereum.Call {
  get inputs(): RemoveTokenCall__Inputs {
    return new RemoveTokenCall__Inputs(this);
  }

  get outputs(): RemoveTokenCall__Outputs {
    return new RemoveTokenCall__Outputs(this);
  }
}

export class RemoveTokenCall__Inputs {
  _call: RemoveTokenCall;

  constructor(call: RemoveTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveTokenCall__Outputs {
  _call: RemoveTokenCall;

  constructor(call: RemoveTokenCall) {
    this._call = call;
  }
}

export class SetAnnualFeeCall extends ethereum.Call {
  get inputs(): SetAnnualFeeCall__Inputs {
    return new SetAnnualFeeCall__Inputs(this);
  }

  get outputs(): SetAnnualFeeCall__Outputs {
    return new SetAnnualFeeCall__Outputs(this);
  }
}

export class SetAnnualFeeCall__Inputs {
  _call: SetAnnualFeeCall;

  constructor(call: SetAnnualFeeCall) {
    this._call = call;
  }

  get _newFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetAnnualFeeCall__Outputs {
  _call: SetAnnualFeeCall;

  constructor(call: SetAnnualFeeCall) {
    this._call = call;
  }
}

export class SetCapCall extends ethereum.Call {
  get inputs(): SetCapCall__Inputs {
    return new SetCapCall__Inputs(this);
  }

  get outputs(): SetCapCall__Outputs {
    return new SetCapCall__Outputs(this);
  }
}

export class SetCapCall__Inputs {
  _call: SetCapCall;

  constructor(call: SetCapCall) {
    this._call = call;
  }

  get _cap(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCapCall__Outputs {
  _call: SetCapCall;

  constructor(call: SetCapCall) {
    this._call = call;
  }
}

export class SetCircuitBreakerCall extends ethereum.Call {
  get inputs(): SetCircuitBreakerCall__Inputs {
    return new SetCircuitBreakerCall__Inputs(this);
  }

  get outputs(): SetCircuitBreakerCall__Outputs {
    return new SetCircuitBreakerCall__Outputs(this);
  }
}

export class SetCircuitBreakerCall__Inputs {
  _call: SetCircuitBreakerCall;

  constructor(call: SetCircuitBreakerCall) {
    this._call = call;
  }

  get _newCircuitBreaker(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCircuitBreakerCall__Outputs {
  _call: SetCircuitBreakerCall;

  constructor(call: SetCircuitBreakerCall) {
    this._call = call;
  }
}

export class SetControllerCall extends ethereum.Call {
  get inputs(): SetControllerCall__Inputs {
    return new SetControllerCall__Inputs(this);
  }

  get outputs(): SetControllerCall__Outputs {
    return new SetControllerCall__Outputs(this);
  }
}

export class SetControllerCall__Inputs {
  _call: SetControllerCall;

  constructor(call: SetControllerCall) {
    this._call = call;
  }

  get _controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetControllerCall__Outputs {
  _call: SetControllerCall;

  constructor(call: SetControllerCall) {
    this._call = call;
  }
}

export class SetFeeRecipientCall extends ethereum.Call {
  get inputs(): SetFeeRecipientCall__Inputs {
    return new SetFeeRecipientCall__Inputs(this);
  }

  get outputs(): SetFeeRecipientCall__Outputs {
    return new SetFeeRecipientCall__Outputs(this);
  }
}

export class SetFeeRecipientCall__Inputs {
  _call: SetFeeRecipientCall;

  constructor(call: SetFeeRecipientCall) {
    this._call = call;
  }

  get _newRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeRecipientCall__Outputs {
  _call: SetFeeRecipientCall;

  constructor(call: SetFeeRecipientCall) {
    this._call = call;
  }
}

export class SetJoinExitEnabledCall extends ethereum.Call {
  get inputs(): SetJoinExitEnabledCall__Inputs {
    return new SetJoinExitEnabledCall__Inputs(this);
  }

  get outputs(): SetJoinExitEnabledCall__Outputs {
    return new SetJoinExitEnabledCall__Outputs(this);
  }
}

export class SetJoinExitEnabledCall__Inputs {
  _call: SetJoinExitEnabledCall;

  constructor(call: SetJoinExitEnabledCall) {
    this._call = call;
  }

  get _newValue(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetJoinExitEnabledCall__Outputs {
  _call: SetJoinExitEnabledCall;

  constructor(call: SetJoinExitEnabledCall) {
    this._call = call;
  }
}

export class SetPublicSwapCall extends ethereum.Call {
  get inputs(): SetPublicSwapCall__Inputs {
    return new SetPublicSwapCall__Inputs(this);
  }

  get outputs(): SetPublicSwapCall__Outputs {
    return new SetPublicSwapCall__Outputs(this);
  }
}

export class SetPublicSwapCall__Inputs {
  _call: SetPublicSwapCall;

  constructor(call: SetPublicSwapCall) {
    this._call = call;
  }

  get _public(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetPublicSwapCall__Outputs {
  _call: SetPublicSwapCall;

  constructor(call: SetPublicSwapCall) {
    this._call = call;
  }
}

export class SetPublicSwapSetterCall extends ethereum.Call {
  get inputs(): SetPublicSwapSetterCall__Inputs {
    return new SetPublicSwapSetterCall__Inputs(this);
  }

  get outputs(): SetPublicSwapSetterCall__Outputs {
    return new SetPublicSwapSetterCall__Outputs(this);
  }
}

export class SetPublicSwapSetterCall__Inputs {
  _call: SetPublicSwapSetterCall;

  constructor(call: SetPublicSwapSetterCall) {
    this._call = call;
  }

  get _newPublicSwapSetter(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPublicSwapSetterCall__Outputs {
  _call: SetPublicSwapSetterCall;

  constructor(call: SetPublicSwapSetterCall) {
    this._call = call;
  }
}

export class SetSwapFeeCall extends ethereum.Call {
  get inputs(): SetSwapFeeCall__Inputs {
    return new SetSwapFeeCall__Inputs(this);
  }

  get outputs(): SetSwapFeeCall__Outputs {
    return new SetSwapFeeCall__Outputs(this);
  }
}

export class SetSwapFeeCall__Inputs {
  _call: SetSwapFeeCall;

  constructor(call: SetSwapFeeCall) {
    this._call = call;
  }

  get _swapFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSwapFeeCall__Outputs {
  _call: SetSwapFeeCall;

  constructor(call: SetSwapFeeCall) {
    this._call = call;
  }
}

export class SetTokenBinderCall extends ethereum.Call {
  get inputs(): SetTokenBinderCall__Inputs {
    return new SetTokenBinderCall__Inputs(this);
  }

  get outputs(): SetTokenBinderCall__Outputs {
    return new SetTokenBinderCall__Outputs(this);
  }
}

export class SetTokenBinderCall__Inputs {
  _call: SetTokenBinderCall;

  constructor(call: SetTokenBinderCall) {
    this._call = call;
  }

  get _newTokenBinder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTokenBinderCall__Outputs {
  _call: SetTokenBinderCall;

  constructor(call: SetTokenBinderCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get _dst(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _src(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _dst(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TripCircuitBreakerCall extends ethereum.Call {
  get inputs(): TripCircuitBreakerCall__Inputs {
    return new TripCircuitBreakerCall__Inputs(this);
  }

  get outputs(): TripCircuitBreakerCall__Outputs {
    return new TripCircuitBreakerCall__Outputs(this);
  }
}

export class TripCircuitBreakerCall__Inputs {
  _call: TripCircuitBreakerCall;

  constructor(call: TripCircuitBreakerCall) {
    this._call = call;
  }
}

export class TripCircuitBreakerCall__Outputs {
  _call: TripCircuitBreakerCall;

  constructor(call: TripCircuitBreakerCall) {
    this._call = call;
  }
}

export class UnbindCall extends ethereum.Call {
  get inputs(): UnbindCall__Inputs {
    return new UnbindCall__Inputs(this);
  }

  get outputs(): UnbindCall__Outputs {
    return new UnbindCall__Outputs(this);
  }
}

export class UnbindCall__Inputs {
  _call: UnbindCall;

  constructor(call: UnbindCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnbindCall__Outputs {
  _call: UnbindCall;

  constructor(call: UnbindCall) {
    this._call = call;
  }
}

export class UpdateWeightCall extends ethereum.Call {
  get inputs(): UpdateWeightCall__Inputs {
    return new UpdateWeightCall__Inputs(this);
  }

  get outputs(): UpdateWeightCall__Outputs {
    return new UpdateWeightCall__Outputs(this);
  }
}

export class UpdateWeightCall__Inputs {
  _call: UpdateWeightCall;

  constructor(call: UpdateWeightCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newWeight(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateWeightCall__Outputs {
  _call: UpdateWeightCall;

  constructor(call: UpdateWeightCall) {
    this._call = call;
  }
}

export class UpdateWeightsGraduallyCall extends ethereum.Call {
  get inputs(): UpdateWeightsGraduallyCall__Inputs {
    return new UpdateWeightsGraduallyCall__Inputs(this);
  }

  get outputs(): UpdateWeightsGraduallyCall__Outputs {
    return new UpdateWeightsGraduallyCall__Outputs(this);
  }
}

export class UpdateWeightsGraduallyCall__Inputs {
  _call: UpdateWeightsGraduallyCall;

  constructor(call: UpdateWeightsGraduallyCall) {
    this._call = call;
  }

  get _newWeights(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _startBlock(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _endBlock(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateWeightsGraduallyCall__Outputs {
  _call: UpdateWeightsGraduallyCall;

  constructor(call: UpdateWeightsGraduallyCall) {
    this._call = call;
  }
}
